name: Rust

on:
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      verbose:
        description: "Set --verbose to get verbose build output"
        required: false
        default: ''

env:
  CARGO_TERM_COLOR: always
  VERBOSE: ${{ github.events.input.verbose }}

jobs:
  cancel_previous_runs:
    name: Cancel Previous Runs
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.4.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}

  lints:
    name: Checking Formatting and Lint
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
      CARGO_INCREMENTAL: false
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: /home/runner/.cache/sccache
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
    steps:
      - uses: actions/checkout@v2
      - name: Install sccache
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: v0.2.15
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          chmod u+x $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: Cache cargo registry and sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ${{ env.SCCACHE_DIR }}
          key: ${{ runner.os }}-cargo-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-sccache-
      - name: Start sccache server
        run: sccache --start-server
      - name: Run rustfmt
        run: cargo fmt -- --check
      - name: Run cargo check
        run: cargo check --all --all-features --tests
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all --all-features --tests -- -D warnings
      - name: Stop sccache server
        run: sccache --stop-server || true

  build:
    name: Build and Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]
        include:
          - os: ubuntu-latest
            sccache-path: /home/runner/.cache/sccache
            target: x86_64-unknown-linux-musl
          - os: macos-latest
            sccache-path: /Users/runner/Library/Caches/Mozilla.sccache
            target: x86_64-apple-darwin
          - os: windows-latest
            sccache-path: ~/sccache/cache
            target: x86_64-pc-windows-msvc
    env:
      RUST_BACKTRACE: full
      CARGO_INCREMENTAL: false
      RUSTC_WRAPPER: sccache
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: ${{ matrix.sccache-path }}
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
    steps:
      - uses: actions/checkout@v2
      - name: Install latest ${{ matrix.rust }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
      - name: Install sccache (ubuntu-latest)
        if: matrix.os == 'ubuntu-latest'
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: v0.2.15
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          chmod u+x $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install sccache (macos-latest)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install sccache
      - name: Install sccache (windows-latest)
        if: matrix.os == 'windows-latest'
        run: .\.ci\windows\install_sccache.ps1
      - name: Cache cargo registry and sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ${{ matrix.sccache-path }}
          key: ${{ runner.os }}-cargo-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-sccache-
      - name: Echo GITHUB_PATH (win)
        if: matrix.os == 'windows-latest'
        run: |
          echo %GITHUB_PATH%
          echo %PATH%
      - name: Start sccache server
        run: sccache --start-server
      - name: Install XCB libs (ubuntu-latest)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y libxcb-shape0-dev libxcb-xfixes0-dev
      - name: Build
        run: cargo +${{ matrix.rust }} build --verbose
      - name: Run tests
        run: cargo +${{ matrix.rust }} test --verbose
      - name: Stop sccache server
        run: sccache --stop-server || true
